{"ast":null,"code":"var _jsxFileName = \"/Users/sidiould/Desktop/Projects/FetchSupport/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n/*\n  Private Route:\n  1. It has the same API as <Route />.\n  2. It renders a <Route /> and passes all the props through to it.\n  3. It checks if the user is authenticated, if they are, it renders the “component” prop. If not, it redirects the user to /login.\n*/\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // const Component = props.component\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (localStorage.getItem(\"token\")) {\n        // if token is in localstorage, render the given component\n        return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/sidiould/Desktop/Projects/FetchSupport/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA;;;;;;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D;AACA,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,eAAO,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAHD,MAGO;AACL,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD,CAfD;;AAiBA,eAAeJ,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n/*\n  Private Route:\n  1. It has the same API as <Route />.\n  2. It renders a <Route /> and passes all the props through to it.\n  3. It checks if the user is authenticated, if they are, it renders the “component” prop. If not, it redirects the user to /login.\n*/\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  // const Component = props.component\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (localStorage.getItem(\"token\")) {\n          // if token is in localstorage, render the given component\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}